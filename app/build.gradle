plugins {
    id 'com.android.application'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.drdisagree.iconify"
        minSdk 31
        targetSdk 33
        versionCode 8
        versionName "6.1.0"
        setProperty("archivesBaseName", "Iconify v" + versionName)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    final def keystorePropertiesFile = rootProject.file("keystore.properties")
    def releaseSigning = signingConfigs.debug
    if (keystorePropertiesFile.exists()) {
        final def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        releaseSigning = signingConfigs.create("release") {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile rootProject.file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue("string", "derived_app_name", "Iconify (Debug)")
            signingConfig releaseSigning
        }

        release {
            resValue("string", "derived_app_name", "Iconify")
            signingConfig releaseSigning
            minifyEnabled false
            proguardFiles "proguard-android-optimize.txt", "proguard.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    namespace 'com.drdisagree.iconify'
}

dependencies {
    // Magisk libsu version
    def libsuVersion = '5.0.4'

    // Xposed API
    compileOnly files('lib/api-82.jar')
    compileOnly files('lib/api-82-sources.jar')

    // The core module that provides APIs to a shell
    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"
    // Optional: APIs for creating root services. Depends on ":core"
    implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"
    // Optional: Provides remote file system support
    implementation "com.github.topjohnwu.libsu:nio:${libsuVersion}"

    // Color Picker
    implementation 'com.github.PolideaInternal:ColorPicker:1.0.0'

    // Splash Screen
    implementation 'androidx.core:core-splashscreen:1.0.0'

    // Material Components
    implementation 'com.google.android.material:material:1.8.0'

    // APK Signer
    implementation 'org.bouncycastle:bc-fips:1.0.2.3'
    implementation 'org.bouncycastle:bcpkix-fips:1.0.7'

    // Zip Util
    implementation 'org.zeroturnaround:zt-zip:1.15'

    // Remote Preference
    implementation 'com.crossbowffs.remotepreferences:remotepreferences:0.8'

    // Flexbox
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.15.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.0'

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.work:work-runtime:2.8.0'
    implementation 'androidx.work:work-runtime-ktx:2.8.0'
    implementation 'org.slf4j:slf4j-api:2.0.6'

    // Test Implementation
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

task printVersionName {
    println android.defaultConfig.versionName.replace("-Stable", "").replace("-Beta", "")
}