name: Build Debug APK

on:
  push:
    branches: [ "beta" ]
  
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get application version name
        run: echo "VERSION_NAME=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_ENV

      - name: Bump application version code
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{github.run_number}}
          versionName: "${{ env.VERSION_NAME }} Dev (#${{github.run_number}})"

      - name: Write sign info
        if: github.repository == 'Mahmud0808/Iconify'
        run: |
          if [ ! -z "${{ secrets.KEYSTORE }}" ]; then
            echo storePassword='${{ secrets.KEYSTORE_PASSWORD }}' >> keystore.properties
            echo keyAlias='${{ secrets.KEY_ALIAS }}' >> keystore.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> keystore.properties
            echo storeFile='${{ github.workspace }}/key.jks' >> keystore.properties
            echo ${{ secrets.KEYSTORE }} | base64 --decode > ${{ github.workspace }}/key.jks
          fi

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "Iconify v${{ env.VERSION_NAME }} Dev (#${{github.run_number}})"
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Copy apk
        id: copy_apk
        run: |
          APK="Iconify_v${{ env.VERSION_NAME }}_Dev_${{github.run_number}}.apk"
          find app/build/outputs/apk/ -name '*.apk' -type f -exec cp {} $APK \;
          echo "apk=$APK" >> $GITHUB_OUTPUT
          echo "md5=$(cat $APK 2>/dev/null | md5sum | cut -d ' ' -f1)" >> $GITHUB_OUTPUT

      - name: SendTo Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          document: ${{ steps.copy_apk.outputs.apk }}
          message: |
            Apk ${{ steps.copy_apk.outputs.apk }}
            Hash md5 `${{ steps.copy_apk.outputs.md5 }}`
